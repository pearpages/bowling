{"version":3,"sources":["components/Frame/Frame.tsx","components/Pins/Pins.tsx","models/models.ts","models/AbstractFrame.ts","models/Frame.ts","models/LastFrame.ts","models/Game.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["getCSSclasses","options","classes","isActive","push","isLast","join","Frame","props","roll1","roll2","score","id","react_default","a","createElement","className","roll3","Pins","min","max","clickHandler","buttons","map","value","index","key","type","onClick","TOTAL_PINS","ERROR_MESSAGE","isValueCorrect","currentPins","isInRange","AbstractFrame","Object","classCallCheck","this","previousFrame","createClass","frame","undefined","hasRoll1","hasRoll2","getRoll1","getRoll2","previousFrameScore","hasPreviousFrame","getPreviousFrame","getScore","hasSpare","hasSpareRoll","getSpareRoll","Error","hasStrike","hasStrikeRolls","getStrikeRolls","_AbstractFrame","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","nextFrame","inherits","previous","next","hasAllRolls","hasFirstBonusRoll","getFirstBonusRoll","LastFrame","getRoll3","hasRoll3","canAddRoll","canAdd3rRoll","Game","frames","currentFrameIndex","frame10","frame9","frame8","frame7","frame6","frame5","frame4","frame3","frame2","frame1","setNextFrame","setPreviousFrame","setSiblingFrames","getCurrentFrame","addRoll","isLastFrame","getNewGame","game","getFrames","App","_Component","updateFrames","state","setState","slice","restartGame","_this2","Fragment","Frame_Frame_Frame","getCurrentFrameIndex","getFramesCount","getHtmlRoll1","getHtmlRoll2","getHtmlRoll3","hasScoreReady","Pins_Pins","currentFrame","getPinsLeft","isCompleted","style","marginLeft","get","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d54b49da.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Frame.scss\";\n\nfunction getCSSclasses(options: {\n  isActive?: boolean;\n  isLast?: boolean;\n}): string {\n  const classes: string[] = [\"frame\"];\n  if (options.isActive) {\n    classes.push(\"frame--active\");\n  }\n  if (options.isLast) {\n    classes.push(\"frame--last\");\n  }\n  return classes.join(\" \");\n}\n\nexport function Frame(props: {\n  roll1: string;\n  roll2: string;\n  roll3?: string;\n  score?: number;\n  id: number;\n  isActive: boolean;\n  isLast: boolean;\n}) {\n  const { roll1, roll2, score, id, isLast } = props;\n  return (\n    <div className={getCSSclasses(props)}>\n      <div className=\"frame__header\">{id}</div>\n      <div className=\"frame__body\">\n        <div className=\"rolls\">\n          <div className=\"rolls__roll1\">{roll1}</div>\n          <div className=\"rolls__roll2\">{roll2}</div>\n          {isLast ? (\n            <div className=\"rolls__roll3\">{props.roll3 ? props.roll3 : \"\"}</div>\n          ) : null}\n        </div>\n        <div className=\"score\">{score}</div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./Pins.scss\";\n\nexport function Pins(props: {\n  min: number;\n  max: number;\n  clickHandler: (value: number) => void;\n}) {\n  let { min, max, clickHandler } = props;\n  const buttons = [];\n  if (min < max) {\n    while (min <= max) {\n      buttons.push(min);\n      min++;\n    }\n  }\n\n  return (\n    <div className=\"pins\">\n      {buttons.map((value: number, index: number) => (\n        <div key={index}>\n          <button\n            className=\"pin-down\"\n            type=\"button\"\n            onClick={() => clickHandler(value)}\n          >\n            {value}\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}\n","export const TOTAL_PINS = 10;\nexport const ERROR_MESSAGE = {\n  ALL_ROLLS: \"All rolls populated\",\n  COMPLETE: \"Frame is complete\",\n  WRONG_VALUE: \"Wrong value\",\n  STRIKE: \"Already a strike\",\n  MISSING_SPARE_ROLL: \"Missing Spare Roll\",\n  MISSING_STRIKE_ROLLS: \"Missing Strike Rolls\"\n};\n\nexport interface FrameInterface {\n  getHtmlRoll1: () => string;\n  getHtmlRoll2: () => string;\n  hasScoreReady: () => boolean;\n  getScore: () => number;\n  getPinsLeft: () => number;\n  canAddRoll: () => boolean;\n  addRoll: (value: number) => void;\n  getRoll1: () => number;\n  hasRoll1: () => boolean;\n  getRoll2: () => number;\n  hasRoll2: () => boolean;\n  getHtmlRoll3?: () => string;\n  hasRoll3?: () => boolean;\n  hasStrike: () => boolean;\n  hasFirstBonusRoll: () => boolean;\n  getFirstBonusRoll: () => number;\n}\nexport function isValueCorrect(value: number, currentPins: number): boolean {\n  return isInRange(value) && value + currentPins <= TOTAL_PINS;\n}\n\nexport function isInRange(value: number): boolean {\n  return value >= 0 && value <= TOTAL_PINS;\n}\n","import { TOTAL_PINS, ERROR_MESSAGE, FrameInterface } from \"./models\";\n\nexport abstract class AbstractFrame implements FrameInterface {\n  protected roll1!: number;\n  protected roll2!: number;\n  protected previousFrame!: FrameInterface;\n  abstract getHtmlRoll1(): string;\n  abstract getHtmlRoll2(): string;\n  abstract hasScoreReady(): boolean;\n  abstract getPinsLeft(): number;\n  abstract canAddRoll(): boolean;\n  abstract addRoll(value: number): void;\n  abstract hasStrike(): boolean;\n  abstract hasFirstBonusRoll(): boolean;\n  abstract getFirstBonusRoll(): number;\n  abstract hasSpareRoll(): boolean;\n  abstract getSpareRoll(): number;\n  abstract hasStrikeRolls(): boolean;\n  abstract getStrikeRolls(): number;\n\n  setPreviousFrame(frame: FrameInterface) {\n    this.previousFrame = frame;\n  }\n\n  getPreviousFrame(): FrameInterface {\n    return this.previousFrame;\n  }\n\n  hasPreviousFrame(): boolean {\n    return !!this.previousFrame;\n  }\n\n  getRoll1(): number {\n    return this.roll1 || 0;\n  }\n\n  getRoll2(): number {\n    return this.roll2 || 0;\n  }\n\n  hasRoll1(): boolean {\n    return this.roll1 !== undefined;\n  }\n\n  hasRoll2(): boolean {\n    return this.roll2 !== undefined;\n  }\n\n  hasSpare(): boolean {\n    return (\n      this.hasRoll1() &&\n      this.hasRoll2() &&\n      this.getRoll1() + this.getRoll2() === TOTAL_PINS\n    );\n  }\n\n  getScore(): number {\n    let previousFrameScore = 0;\n    if (!!this.hasPreviousFrame()) {\n      previousFrameScore = this.getPreviousFrame().getScore();\n    }\n    if (this.hasSpare()) {\n      if (this.hasSpareRoll()) {\n        return previousFrameScore + TOTAL_PINS + this.getSpareRoll();\n      }\n      throw new Error(ERROR_MESSAGE.MISSING_SPARE_ROLL);\n    } else if (this.hasStrike()) {\n      if (this.hasStrikeRolls()) {\n        return previousFrameScore + TOTAL_PINS + this.getStrikeRolls();\n      }\n      throw new Error(ERROR_MESSAGE.MISSING_STRIKE_ROLLS);\n    }\n    return previousFrameScore + this.getRoll1() + this.getRoll2();\n  }\n}\n","import { AbstractFrame } from \"./AbstractFrame\";\nimport { TOTAL_PINS, ERROR_MESSAGE, isValueCorrect } from \"./models\";\n\nexport class Frame extends AbstractFrame {\n  protected nextFrame!: AbstractFrame;\n\n  setNextFrame(frame: AbstractFrame) {\n    this.nextFrame = frame;\n  }\n\n  setSiblingFrames(previous: AbstractFrame, next: AbstractFrame) {\n    this.previousFrame = previous;\n    this.nextFrame = next;\n  }\n\n  hasAllRolls(): boolean {\n    return this.roll1 !== undefined && this.roll2 !== undefined;\n  }\n\n  getHtmlRoll1(): string {\n    if (this.roll1 === undefined || this.hasStrike()) {\n      return \"\";\n    }\n    return this.roll1 + \"\";\n  }\n\n  getHtmlRoll2(): string {\n    if (this.hasStrike()) {\n      return \"X\";\n    } else if (this.roll2 === undefined) {\n      return \"\";\n    } else if (this.hasSpare()) {\n      return \"/\";\n    } else return this.roll2 + \"\";\n  }\n\n  getPinsLeft(): number {\n    return TOTAL_PINS - this.getRoll1();\n  }\n\n  getFirstBonusRoll(): number {\n    if (this.nextFrame) {\n      return this.nextFrame.getRoll1();\n    }\n    return 0;\n  }\n\n  hasFirstBonusRoll(): boolean {\n    if (this.nextFrame) {\n      return this.nextFrame.hasRoll1();\n    }\n    return false;\n  }\n\n  addRoll(value: number): void {\n    if (this.hasStrike()) {\n      throw new Error(ERROR_MESSAGE.STRIKE);\n    } else if (this.hasAllRolls()) {\n      throw new Error(ERROR_MESSAGE.ALL_ROLLS);\n    } else if (!isValueCorrect(value, this.getRoll1())) {\n      throw new Error(ERROR_MESSAGE.WRONG_VALUE);\n    }\n\n    if (this.roll1 === undefined) {\n      this.roll1 = value;\n    } else if (this.roll2 === undefined) {\n      this.roll2 = value;\n    }\n  }\n\n  hasStrike(): boolean {\n    return this.getRoll1() === TOTAL_PINS;\n  }\n\n  hasSpareRoll(): boolean {\n    return !!this.nextFrame && !!this.nextFrame.getRoll1();\n  }\n\n  getSpareRoll(): number {\n    if (this.nextFrame) {\n      return this.nextFrame.getRoll1();\n    }\n    return 0;\n  }\n\n  hasStrikeRolls(): boolean {\n    if (!this.nextFrame) {\n      return false;\n    }\n    if (this.nextFrame.hasStrike()) {\n      return this.nextFrame.hasRoll1() && this.nextFrame.hasFirstBonusRoll();\n    }\n    return this.nextFrame.hasRoll1() && this.nextFrame.hasRoll2();\n  }\n\n  getStrikeRolls(): number {\n    if (this.hasStrikeRolls()) {\n      if (this.nextFrame.hasStrike()) {\n        return TOTAL_PINS + this.nextFrame.getFirstBonusRoll();\n      }\n      return this.nextFrame.getRoll1() + this.nextFrame.getRoll2();\n    }\n    throw new Error(ERROR_MESSAGE.MISSING_STRIKE_ROLLS);\n  }\n\n  canAddRoll(): boolean {\n    return !this.hasAllRolls() && !this.hasStrike();\n  }\n\n  hasScoreReady(): boolean {\n    return (\n      (this.hasAllRolls() && !this.hasSpare()) ||\n      (this.hasSpare() && this.hasSpareRoll()) ||\n      (this.hasStrike() && this.hasStrikeRolls())\n    );\n  }\n}\n","import { AbstractFrame } from \"./AbstractFrame\";\nimport { TOTAL_PINS, ERROR_MESSAGE, isValueCorrect, isInRange } from \"./models\";\n\nexport class LastFrame extends AbstractFrame {\n  protected roll3!: number;\n\n  hasRoll3(): boolean {\n    return this.roll3 !== undefined;\n  }\n\n  getRoll3(): number {\n    return this.roll3 || 0;\n  }\n\n  canAdd3rRoll(): boolean {\n    return !this.hasRoll3() && (this.hasSpare() || this.hasStrike());\n  }\n\n  isValueCorrect(value: number, currentPins: number): boolean {\n    if (this.getRoll1() === TOTAL_PINS) {\n      return isInRange(value);\n    }\n    if (!this.hasRoll2()) {\n      return isValueCorrect(value, currentPins);\n    }\n    return isInRange(value);\n  }\n\n  getHtmlRoll1(): string {\n    if (this.roll1 === undefined) {\n      return \"\";\n    } else if (this.roll1 === TOTAL_PINS) {\n      return \"X\";\n    }\n    return this.roll1 + \"\";\n  }\n\n  getHtmlRoll2(): string {\n    if (this.roll2 === undefined) {\n      return \"\";\n    } else if (this.roll1 + this.roll2 === TOTAL_PINS) {\n      return \"/\";\n    } else if (this.roll2 === TOTAL_PINS) {\n      return \"X\";\n    }\n    return this.roll2 + \"\";\n  }\n\n  getHtmlRoll3(): string {\n    if (this.roll3 === undefined) {\n      return \"\";\n    } else if (this.roll3 === TOTAL_PINS) {\n      return \"X\";\n    }\n    return this.roll3 + \"\";\n  }\n\n  getPinsLeft(): number {\n    if (!this.hasRoll1()) {\n      return TOTAL_PINS;\n    } else if (!this.hasRoll2() && !this.hasStrike()) {\n      return TOTAL_PINS - this.getRoll1();\n    } else if (!this.hasRoll2() && this.hasStrike()) {\n      return TOTAL_PINS;\n    } else if (!this.hasRoll3() && this.hasSpare()) {\n      return TOTAL_PINS;\n    } else if (!this.hasRoll3() && this.getRoll2() === TOTAL_PINS) {\n      return TOTAL_PINS;\n    } else if (!this.hasRoll3() && this.getRoll2() !== TOTAL_PINS) {\n      return TOTAL_PINS - this.getRoll2();\n    } else {\n      return 0;\n    }\n  }\n\n  getFirstBonusRoll = () => this.getRoll3();\n\n  hasFirstBonusRoll = () => this.hasRoll3();\n\n  addRoll(value: number): void {\n    if (!this.canAddRoll()) {\n      throw new Error(ERROR_MESSAGE.ALL_ROLLS);\n    } else if (!this.isValueCorrect(value, this.getRoll1() + this.getRoll2())) {\n      throw new Error(ERROR_MESSAGE.WRONG_VALUE);\n    }\n\n    if (!this.hasRoll1()) {\n      this.roll1 = value;\n    } else if (!this.hasRoll2()) {\n      this.roll2 = value;\n    } else if (this.canAdd3rRoll()) {\n      this.roll3 = value;\n    }\n  }\n\n  hasStrike(): boolean {\n    return this.getRoll1() === TOTAL_PINS || this.getRoll2() === TOTAL_PINS;\n  }\n\n  hasSpareRoll(): boolean {\n    return this.hasRoll3();\n  }\n\n  getSpareRoll(): number {\n    return this.getRoll3();\n  }\n\n  hasStrikeRolls(): boolean {\n    return this.hasRoll2() && this.hasRoll3();\n  }\n\n  getStrikeRolls(): number {\n    return this.getRoll2() + this.getRoll3();\n  }\n\n  canAddRoll(): boolean {\n    if (!this.hasRoll1() || !this.hasRoll2()) {\n      return true;\n    }\n    return this.canAdd3rRoll();\n  }\n\n  hasScoreReady(): boolean {\n    return !this.canAddRoll();\n  }\n}\n","import { TOTAL_PINS, FrameInterface } from \"./models\";\nimport { Frame } from \"./Frame\";\nimport { LastFrame } from \"./LastFrame\";\n\nexport function roll(): number {\n  return Math.floor((TOTAL_PINS + 1) * Math.random());\n}\n\nexport class Game {\n  frames: Array<FrameInterface>;\n  currentFrameIndex = 0;\n\n  constructor() {\n    const frame10 = new LastFrame();\n    const frame9 = new Frame();\n    const frame8 = new Frame();\n    const frame7 = new Frame();\n    const frame6 = new Frame();\n    const frame5 = new Frame();\n    const frame4 = new Frame();\n    const frame3 = new Frame();\n    const frame2 = new Frame();\n    const frame1 = new Frame();\n    frame1.setNextFrame(frame2);\n    frame10.setPreviousFrame(frame9);\n    frame2.setSiblingFrames(frame1, frame3);\n    frame3.setSiblingFrames(frame2, frame4);\n    frame4.setSiblingFrames(frame3, frame5);\n    frame5.setSiblingFrames(frame4, frame6);\n    frame6.setSiblingFrames(frame5, frame7);\n    frame7.setSiblingFrames(frame6, frame8);\n    frame8.setSiblingFrames(frame7, frame9);\n    frame9.setSiblingFrames(frame8, frame10);\n    this.frames = [\n      frame1,\n      frame2,\n      frame3,\n      frame4,\n      frame5,\n      frame6,\n      frame7,\n      frame8,\n      frame9,\n      frame10\n    ];\n  }\n\n  addRoll(value: number) {\n    this.getCurrentFrame().addRoll(value);\n    if (!this.getCurrentFrame().canAddRoll() && !this.isLastFrame()) {\n      this.currentFrameIndex++;\n    }\n  }\n\n  getCurrentFrame(): FrameInterface {\n    return this.frames[this.currentFrameIndex];\n  }\n\n  getCurrentFrameIndex(): number {\n    return this.currentFrameIndex;\n  }\n\n  getFrames(): FrameInterface[] {\n    return this.frames;\n  }\n\n  getFramesCount(): number {\n    return this.frames.length;\n  }\n\n  isLastFrame(): boolean {\n    return this.currentFrameIndex === this.frames.length - 1;\n  }\n\n  isCompleted(): boolean {\n    if (this.isLastFrame()) {\n      return !this.getCurrentFrame().canAddRoll();\n    }\n    return false;\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./App.scss\";\nimport { Frame, Pins } from \"./components\";\nimport { Game, FrameInterface } from \"./models\";\n\ninterface State {\n  frames: FrameInterface[];\n  game: Game;\n}\n\nfunction getNewGame(): State {\n  const game = new Game();\n  const state = {\n    game,\n    frames: game.getFrames()\n  };\n  return state;\n}\n\nexport class App extends Component<{}, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = getNewGame();\n  }\n\n  get currentFrame(): FrameInterface {\n    return this.state.game.getCurrentFrame();\n  }\n\n  updateFrames = (value: number) => {\n    this.state.game.addRoll(value);\n    this.setState({ frames: this.state.frames.slice() });\n  };\n\n  restartGame = () => {\n    this.setState(getNewGame());\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"bowling\">\n          <div className=\"frames\">\n            {this.state.frames.map((frame: FrameInterface, key: number) => (\n              <Frame\n                key={key + 1}\n                id={key + 1}\n                isActive={key === this.state.game.getCurrentFrameIndex()}\n                isLast={key === this.state.game.getFramesCount() - 1}\n                roll1={frame.getHtmlRoll1()}\n                roll2={frame.getHtmlRoll2()}\n                roll3={frame.getHtmlRoll3 ? frame.getHtmlRoll3() : \"\"}\n                score={frame.hasScoreReady() ? frame.getScore() : undefined}\n              />\n            ))}\n          </div>\n          <Pins\n            min={0}\n            max={this.currentFrame.getPinsLeft()}\n            clickHandler={this.updateFrames}\n          />\n          {this.state.game.isCompleted() ? (\n            <button style={{ marginLeft: \"75px\" }} onClick={this.restartGame}>\n              RESTART\n            </button>\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}